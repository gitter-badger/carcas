
/*--------------------------------------------------------------
MIXINS
--------------------------------------------------------------*/
//Using @include declare-font-face('FontName', 'font-filename', 400);
@mixin declare-font-face($font-family, $font-filename, $font-weight: normal, $font-style: normal){
    @font-face{
        font-family: #{$font-family};
        font-weight: $font-weight;
        font-style: $font-style;

        src: url('fonts/#{$font-filename}.eot');
        src: url('fonts/#{$font-filename}.eot?#iefix') format('embedded-opentype'),
        url('fonts/#{$font-filename}.woff') format('woff'),
        url('fonts/#{$font-filename}.ttf') format('truetype'),
        url('fonts/#{$font-filename}.svg##{$font-family}') format('svg');
    }
}
@mixin box-sizing($s){
    -webkit-box-sizing: $s;
       -moz-box-sizing: $s;
            box-sizing: $s;

        -ms-box-sizing: $s;
}
// @include border-radius(5px);
@mixin border-radius($radius){
    -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
            border-radius: $radius;
}



@mixin background-size($size){
    -webkit-background-size: $size;
       -moz-background-size: $size;
            background-size: $size;

        -ms-background-size: $size;
}
@mixin box-shadow($shadow){
    -webkit-box-shadow: $shadow;
       -moz-box-shadow: $shadow;
            box-shadow: $shadow;
}
@mixin transition($transition-property, $transition-time, $method){
    -webkit-transition: $transition-property $transition-time $method;
       -moz-transition: $transition-property $transition-time $method;
        -ms-transition: $transition-property $transition-time $method;
            transition: $transition-property $transition-time $method;
}
@mixin position($position: relative, $top: 0, $right: 0, $bottom: 0, $left: 0){
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}
@mixin transform($action, $backface: false){
    @if $backface{
        -webkit-transform: $action;
           -moz-transform: $action;
            -ms-transform: $action;
                transform: $action;

        -webkit-backface-visibility: hidden;
                backface-visibility: hidden;
    }
    @else{
        -webkit-transform: $action;
           -moz-transform: $action;
            -ms-transform: $action;
                transform: $action;
    }
}
@mixin scale($scale){
    -webkit-transform: scale($scale);
       -moz-transform: scale($scale);
        -ms-transform: scale($scale);
            transform: scale($scale);
}
/* @include center(true, false); */
@mixin center($horizontal: true, $vertical: true){
    position: absolute;
    @if ($horizontal and $vertical){
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
    } @else if ($horizontal){
        left: 50%;
        -webkit-transform: translate(-50%, 0);
                transform: translate(-50%, 0);
    } @else if ($vertical){
        top: 50%;
        -webkit-transform: translate(0, -50%);
                transform: translate(0, -50%);
    }
}
// Placeholder text
@mixin placeholder{
    &:-moz-placeholder{
        @content;
    } // Firefox 4-18
    &::-moz-placeholder{
        opacity: 1; @content;
    } // Firefox 19+
    &:-ms-input-placeholder{
        @content;
    } // Internet Explorer 10+
    &::-webkit-input-placeholder{
        @content;
    } // Safari and Chrome
}
/* @include rotate( 180 ); */
@mixin rotate( $degrees){
    zoom: 1;
    -webkit-transform: rotate(#{$degrees}deg);
       -moz-transform: rotate(#{$degrees}deg);
        -ms-transform: rotate(#{$degrees}deg);
            transform: rotate(#{$degrees}deg);

    -ms-filter: 'progid:DXImageTransform.Microsoft.Matrix(sizingMethod=\'auto expand\', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})';
    filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
}
@mixin rgba($hexcolor, $opacity){
    background-color: $hexcolor;
    background-color: rgba($hexcolor, $opacity);
}